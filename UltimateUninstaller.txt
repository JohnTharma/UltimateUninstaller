@echo off
setlocal

:: Define software name, new version, and silent parameters
set "softwareName=YourSoftwareName"
set "newVersion=1.2.0"
set "silentParameters=/silent /norestart" 

:: Check if the software exists in the 32-bit registry
reg query "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\%softwareName%" > nul 2>&1
if %errorlevel% equ 0 (
    call :CheckVersion "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\%softwareName%"
) else (
    :: If not found in 32-bit registry, check 64-bit registry
    reg query "HKLM\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\%softwareName%" > nul 2>&1
    if %errorlevel% equ 0 (
        call :CheckVersion "HKLM\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\%softwareName%"
    ) else (
        echo Software not found.
        exit /b 1
    )
)

exit /b 0

:CheckVersion
:: Retrieve the display version from the registry
for /f "tokens=2,*" %%A in ('reg query "%~1" /v DisplayVersion 2^>nul') do (
    set "displayVersion=%%B"
)

:: Check if the display version is greater than or equal to the new version
if "%displayVersion%" geq "%newVersion%" (
    echo Newer version (%displayVersion%) is already installed.
    exit /b 0
) else (
    echo Old version (%displayVersion%) detected. Uninstalling...
    for /f "tokens=2,*" %%A in ('reg query "%~1" /v UninstallString ^| find /i "UninstallString"') do (
        set "uninstallString=%%B"
    )
    echo Uninstalling %softwareName%...
    start /wait "" %uninstallString% %silentParameters%
    echo Installation complete.
)
exit /b 0